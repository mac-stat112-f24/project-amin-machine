[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "March Madness Data",
    "section": "",
    "text": "Preface\nAdd introduction to your project here.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "Report",
    "section": "",
    "text": "Add your report to this file.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "For our project, we plan on analyzing March Madness Data from the years 2008-2023 (excluding 2020), trying to see how far each team went in the tournament based on their power ranking in order to see if there are any trends. March Madness is an end of season collegeiate basketball tournmanet that takes place each year. It is noteable because millions of people try and predict the winner, which is a tall task. Along side the primary dataset, there supplemental datsets on kaggle that we could join to further the scope of our research project as we go. The supplemental dataset that we joined with the March Madness Data is the cbb data set. This data set includes more information about each time like conference, wins, shooting percentage etc.",
    "crumbs": [
      "Appendices",
      "Proposal"
    ]
  },
  {
    "objectID": "sketch.html",
    "href": "sketch.html",
    "title": "Sketch",
    "section": "",
    "text": "sketch",
    "crumbs": [
      "Appendices",
      "Sketch"
    ]
  },
  {
    "objectID": "-2.html",
    "href": "-2.html",
    "title": "Sketch",
    "section": "",
    "text": "library(readr)\nmarch_madness &lt;- read_csv(\"538 Ratings.csv\")\n\nRows: 476 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): TEAM\ndbl (6): YEAR, TEAM NO, SEED, ROUND, POWER RATING, POWER RATING RANK\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlibrary(readr)\ncbb &lt;- read_csv(\"cbb.csv\")\n\nRows: 3523 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): TEAM, CONF, POSTSEASON, SEED\ndbl (20): G, W, ADJOE, ADJDE, BARTHAG, EFG_O, EFG_D, TOR, TORD, ORB, DRB, FT...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nmarch_madness |&gt;\n  str()\n\nspc_tbl_ [476 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YEAR             : num [1:476] 2023 2023 2023 2023 2023 ...\n $ TEAM NO          : num [1:476] 993 1011 986 963 957 ...\n $ TEAM             : chr [1:476] \"Houston\" \"Alabama\" \"Kansas\" \"Purdue\" ...\n $ SEED             : num [1:476] 1 1 1 1 2 2 2 2 3 3 ...\n $ ROUND            : num [1:476] 16 16 32 64 8 64 16 32 8 32 ...\n $ POWER RATING     : num [1:476] 93.2 92.6 89.6 89.5 90.1 89 88.3 87.6 89.9 87.1 ...\n $ POWER RATING RANK: num [1:476] 13 16 49 50 43 59 78 92 46 104 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YEAR = col_double(),\n  ..   `TEAM NO` = col_double(),\n  ..   TEAM = col_character(),\n  ..   SEED = col_double(),\n  ..   ROUND = col_double(),\n  ..   `POWER RATING` = col_double(),\n  ..   `POWER RATING RANK` = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\nmarch_madness |&gt;\n  ggplot(aes(x = `POWER RATING`)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\nmarch_madness |&gt;\n  filter(TEAM ==\"Duke\") |&gt;\n  ggplot(aes(x = YEAR, y = SEED)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\nuconn &lt;- march_madness|&gt;\n  filter(TEAM == \"Connecticut\")\n\nuconn |&gt; \n  ggplot(aes(x = YEAR, y = ROUND)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: span too small.  fewer data values than degrees of freedom.\n\n\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: pseudoinverse used at 2016\n\n\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: neighborhood radius 6.035\n\n\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: reciprocal condition number 0\n\n\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: There are other near singularities as well. 4.1412\n\n\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : span too small.  fewer\ndata values than degrees of freedom.\n\n\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : pseudoinverse used at\n2016\n\n\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : neighborhood radius\n6.035\n\n\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : reciprocal condition\nnumber 0\n\n\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : There are other near\nsingularities as well. 4.1412\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\n\n\n march_madness_new &lt;- march_madness |&gt;\n  mutate(SEED = as.character(SEED))\n\nmarch_madness_new &lt;- march_madness_new|&gt;\nfull_join(cbb)\n\nJoining with `by = join_by(YEAR, TEAM, SEED)`\n\n\n\nmarch_madness_new |&gt;\naggregate(`3P_O` ~ CONF + YEAR, FUN = mean) |&gt;\n  filter(CONF %in% c(\"ACC\", \"B10\", \"B12\", \"SEC\", \"P12\", \"BE\")) |&gt;\n # filter(YEAR == \"2016\") |&gt;\n  ggplot(aes(x = CONF, y = `3P_O`)) +\n    geom_boxplot() +\n  labs(title = \"3 Point Percentage by Conference\", \n       x = \"Conference\",\n       y = \"3 Point %\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nCONF_win_perc &lt;- march_madness_new |&gt;\n  group_by(CONF) |&gt;\n  summarise(\n    total_games_played = sum(G, na.rm = TRUE),\n    total_games_won = sum(W, na.rm = TRUE),\n    win_percentage = total_games_won / total_games_played * 100\n  )\n\n\nlibrary(tidyverse)\nggplot(CONF_win_perc, aes(x = CONF, y = win_percentage, fill = win_percentage)) +\n  geom_col() +\n  coord_flip() +\n  labs(\n    title = \"Win Percentage by Conference\",\n    x = \"Conference\",\n    y = \"Win Percentage (%)\",\n    fill = \"Win Rate (%)\"\n  ) +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 8))\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_col()`).\n\n\n\n\n\n\n\n\n\n\nmarch_madness_new |&gt;\n  filter(CONF %in% c(\"ACC\", \"B10\", \"B12\", \"SEC\", \"P12\", \"BE\")) |&gt;\nggplot(aes(x = `3P_O`, y = W)) +\n    geom_point() +\n  geom_smooth() +\n  facet_wrap(~CONF) +\n  labs(title = \"3 Point % Impact on Wins\",\n    x = \"3 Point %\", \n       y = \"Number of Wins\")\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nmarch_madness_new |&gt;\n  filter(ROUND == \"1\") |&gt;\n  group_by(TEAM) |&gt;\n  ggplot(aes(x = TEAM, y = `3P_O`)) +\n  geom_point() +\n  labs(title = \"Champions 3 Point %\")\n\n\n\n\n\n\n\n\n\nmarch_madness_new |&gt;\n  filter(ROUND == \"1\") |&gt;\n  arrange(TOR)\n\n# A tibble: 7 × 28\n   YEAR `TEAM NO` TEAM      SEED  ROUND `POWER RATING` `POWER RATING RANK` CONF \n  &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;          &lt;dbl&gt;               &lt;dbl&gt; &lt;chr&gt;\n1  2019       745 Virginia  1         1           95.2                   4 ACC  \n2  2018       678 Villanova 1         1           94.9                   7 BE   \n3  2017       638 North Ca… 1         1           91.7                  24 ACC  \n4  2016       543 Villanova 2         1           91.3                  26 BE   \n5  2022       918 Kansas    1         1           91.3                  26 B12  \n6  2021       871 Baylor    1         1           93.6                  12 B12  \n7  2023      1002 Connecti… 4         1           89.2                  57 BE   \n# ℹ 20 more variables: G &lt;dbl&gt;, W &lt;dbl&gt;, ADJOE &lt;dbl&gt;, ADJDE &lt;dbl&gt;,\n#   BARTHAG &lt;dbl&gt;, EFG_O &lt;dbl&gt;, EFG_D &lt;dbl&gt;, TOR &lt;dbl&gt;, TORD &lt;dbl&gt;, ORB &lt;dbl&gt;,\n#   DRB &lt;dbl&gt;, FTR &lt;dbl&gt;, FTRD &lt;dbl&gt;, `2P_O` &lt;dbl&gt;, `2P_D` &lt;dbl&gt;, `3P_O` &lt;dbl&gt;,\n#   `3P_D` &lt;dbl&gt;, ADJ_T &lt;dbl&gt;, WAB &lt;dbl&gt;, POSTSEASON &lt;chr&gt;\n\n # all winning teams had turnover rates lower than 20%, meaning they turn the ball over on fewer than 20% of their possessions\n\n\nCONF_win_perc |&gt;\n  arrange(desc(win_percentage))\n\n# A tibble: 36 × 4\n   CONF  total_games_played total_games_won win_percentage\n   &lt;chr&gt;              &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n 1 B12                 3342            2055           61.5\n 2 B10                 4531            2708           59.8\n 3 BE                  3541            2113           59.7\n 4 ACC                 4854            2892           59.6\n 5 Ind                   29              17           58.6\n 6 SEC                 4616            2684           58.1\n 7 P12                 3934            2262           57.5\n 8 Amer                3151            1782           56.6\n 9 WCC                 3050            1713           56.2\n10 MWC                 3341            1874           56.1\n# ℹ 26 more rows\n\n\n\nmarch_madness_new |&gt;\n  filter(CONF %in% c(\"ACC\", \"B10\", \"B12\", \"SEC\", \"P12\", \"BE\")) |&gt;\n  ggplot(aes (x = ADJDE, y = W, color = CONF)) +\n  geom_point() +\n  geom_smooth() +\n  labs(x = \"Defense Efficiency\", y = \"Wins\")\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nmarch_madness_new |&gt;\n  filter(CONF %in% c(\"ACC\", \"B10\", \"B12\", \"SEC\", \"P12\", \"BE\")) |&gt;\n  ggplot(aes(x = CONF, y = ORB)) +\n  geom_boxplot() +\n  labs(title = \"Offensive Rebounds By Conference\", \n       x = \"Conference\", \n       y = \"Offensive Rebounds\")\n\n\n\n\n\n\n\n#This plot helps explain the strong paint presence in the SEC, showing why they are still able to compete at a high level in March Madness despite lower 3 point percentages.",
    "crumbs": [
      "Appendices",
      "Sketch"
    ]
  }
]